suite: Full values.yaml test suite
templates:
  - templates/_deployment.yaml
  - templates/_service.yaml
  - templates/_ingress.yaml
  - templates/_pvc.yaml

tests:
  ### COMPONENT: WEB DEPLOYMENT ###
  - it: should render web deployment with correct image and env
    set:
      components[0].name: web
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:stable
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: ENV
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: prod

  - it: should render init container setup-volume
    asserts:
      - contains:
          path: spec.template.spec.initContainers
          content:
            name: setup-volume
            image: alpine

  ### COMPONENT: WEB SERVICE ###
  - it: should render service with correct annotations and port
    asserts:
      - equal:
          path: metadata.annotations["metallb.universe.tf/address-pool"]
          value: default
      - equal:
          path: spec.ports[0].port
          value: 80
      - equal:
          path: spec.ports[0].targetPort
          value: 8080

  ### COMPONENT: WEB INGRESS ###
  - it: should render ingress with TLS and rewrite annotation
    asserts:
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]
          value: /
      - equal:
          path: spec.tls[0].hosts[0]
          value: web.mondomaine.local
      - equal:
          path: spec.tls[0].secretName
          value: web-cert

  ### COMPONENT: WEB PVC ###
  - it: should render PVC with correct storage and access mode
    asserts:
      - equal:
          path: spec.resources.requests.storage
          value: 1Gi
      - equal:
          path: spec.accessModes[0]
          value: ReadWriteOnce
      - equal:
          path: spec.storageClassName
          value: local-path

  ### ADDON: REDIS ###
  - it: should render redis init container with password env
    set:
      addons.redis.enabled: true
      addons.redis.password: changeme
      component: web
    asserts:
      - contains:
          path: templates/_redis.tpl
          content: REDIS_PASSWORD
      - contains:
          path: templates/_redis.tpl
          content: redis-cli

  ### ADDON: POSTGRES ###
  - it: should render postgres init with analytics DB
    asserts:
      - contains:
          path: templates/postgres-init.yaml
          content: analytics
      - contains:
          path: templates/postgres-init.yaml
          content: securepass
      - contains:
          path: templates/postgres-init.yaml
          content: analyst

  ### ADDON: VSCODE ###
  - it: should enable vscode addon
    asserts:
      - isTrue:
          path: addons.vscode.enabled
