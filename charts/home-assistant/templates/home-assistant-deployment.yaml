apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
    app.kubernetes.io/component: home-assistant
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: home-assistant
  template:
    metadata:
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: home-assistant
    spec:
      serviceAccountName: {{ include "home-assistant.serviceAccountName" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        ####################
        ## home-assistant ##
        ####################
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.timezone }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /config
              name: home-assistant-config
            {{- if .Values.usbMount.enabled }}
            - mountPath: /dev/ttyACM0
              name: usb
            {{- end }}
          resources:
            {{ toYaml .Values.resources | indent 12 }}
      {{- if .Values.postgresql.enabled }}
      initContainers: 
        ################
        ## db-ready ##
        ################
        - name: check-db-ready
          image: bitnami/postgresql:16
          command: ['sh', '-c', 'until pg_isready -d {{ .Release.Name }} -U {{ .Values.postgresql.auth.username }} -h {{ .Release.Name }}-cnpg-rw; do echo waiting for database; sleep 2; done;']
        - name: init-config
          image: busybox
          command: ['sh', '/config-script/init.sh']
          volumeMounts:
            - mountPath: /config
              name: home-assistant-config
            - mountPath: /config-init
              name: config-init
            - mountPath: /config-script
              name: config-script
      {{- end }}
      #############
      ## volumes ##
      #############  
      volumes:
        - name: home-assistant-config
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "home-assistant.fullname" . }}-pvc-config{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config-init
          configMap:
            name: home-assistant-config-init
        - name: config-script
          configMap:
            name: home-assistant-config-script
        {{- if .Values.usbMount.enabled }}
        - mountPath: /dev/ttyACM0
          name: usb
        {{- end }}
        