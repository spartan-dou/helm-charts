apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frigate.fullname" . }}
  labels:
    {{- include "frigate.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "frigate.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "frigate.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "frigate.serviceAccountName" . }}
      {{- if gt (int .Values.gpu.nvidia) 0 }}
      runtimeClassName: nvidia
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{- if gt (int .Values.gpu.nvidia) 0 }}{{ .Values.image.gpuTag  }}{{- else }}{{ .Values.image.tag  }}{{- end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            fsGroup: 1000
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: http-auth
              containerPort: 8971
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
            - name: webrtc-tcp
              containerPort: 8555
              protocol: TCP
            - name: webrtc-udp
              containerPort: 8555
              protocol: UDP
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{- if gt (int .Values.gpu.nvidia) 0 }}
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "all"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          volumeMounts:
            {{- if .Values.coral.enabled }}
            - mountPath: {{ .Values.coral.hostPath }}
              name: coral
            {{- end }}
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
            - mountPath: /media
              name: media
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.tmpfs.enabled }}
            - mountPath: /tmp
              name: tmp
            {{- end }}
          resources:
            limits:
              nvidia.com/gpu: {{ (int .Values.gpu.nvidia) }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: configmap
          configMap:
            name: {{ template "frigate.fullname" . }}
        {{- if .Values.coral.enabled }}
        - name: coral
          hostPath:
            path: {{ .Values.coral.hostPath }}
        {{- end }}
        - name: config
          {{- if .Values.persistence.config.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}{{ template "frigate.fullname" . }}-config{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "frigate.fullname" . }}-data{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: media
          {{- if .Values.persistence.media.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.media.existingClaim }}{{ .Values.persistence.media.existingClaim }}{{- else }}{{ template "frigate.fullname" . }}-media{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.shmSize }}
        {{- if .Values.tmpfs.enabled }}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.tmpfs.sizeLimit }}
        {{- end }}
