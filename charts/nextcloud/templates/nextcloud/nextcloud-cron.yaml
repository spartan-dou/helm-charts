apiVersion: batch/v1
kind: CronJob
metadata:
  name: nextcloud-cron
spec:
  schedule: "*/5 * * * *"  # Ex√©cution toutes les 5 minutes
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          {{- if gt (int .Values.nextcloud.gpu.nvidia) 0 }}
          runtimeClassName: nvidia
          {{- end }}
          volumes:
            - name: nextcloud
              {{- if .Values.nextcloud.persistence.config.enabled }}
              persistentVolumeClaim:
                claimName: {{ if .Values.nextcloud.persistence.existingClaim }}{{ .Values.nextcloud.persistence.existingClaim }}{{- else }}nextcloud-config-pvc{{- end }}
              {{- else }}
              emptyDir: {}
              {{- end }}
            - name: nextcloud-data
              {{- if .Values.nextcloud.persistence.data.enabled }}
              hostPath:
                path: {{ .Values.nextcloud.persistence.data.hostPath }}
                type: Directory
              {{- else }}
              emptyDir: {}
              {{- end }}
          securityContext:
            fsGroup: 33
          containers:
          - name: nextcloud-cron
            image: "{{ .Values.nextcloud.image.repository }}:{{ .Values.nextcloud.image.tag }}{{- with .Values.nextcloud.image.flavor }}-{{ . }}{{- end }}"
            {{- with .Values.nextcloud.securityContext }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            env:
              {{- include "nextcloud.env" . | trim | nindent 14 }}
            command:
            - /bin/sh
            - -c
            - echo "begining cronjob"; php -f /var/www/html/cron.php
            volumeMounts:
              {{- include "nextcloud.volumeMounts" . | trim | nindent 14 }}
            resources:
              limits:
                nvidia.com/gpu: {{ .Values.nextcloud.gpu.nvidia }}
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: application-cron
spec:
  schedule: {{ .Values.nextcloud.job.cron | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          {{- if gt (int .Values.nextcloud.gpu.nvidia) 0 }}
          runtimeClassName: nvidia
          {{- end }}
          volumes:
            - name: nextcloud
              {{- if .Values.nextcloud.persistence.config.enabled }}
              persistentVolumeClaim:
                claimName: {{ if .Values.nextcloud.persistence.existingClaim }}{{ .Values.nextcloud.persistence.existingClaim }}{{- else }}nextcloud-config-pvc{{- end }}
              {{- else }}
              emptyDir: {}
              {{- end }}
            - name: nextcloud-data
              {{- if .Values.nextcloud.persistence.data.enabled }}
              hostPath:
                path: {{ .Values.nextcloud.persistence.data.hostPath }}
                type: Directory
              {{- else }}
              emptyDir: {}
              {{- end }}
            - name: nextcloud-hooks-folder
              {{- if .Values.nextcloud.persistence.hooks.enabled }}
              persistentVolumeClaim:
                claimName: {{ if .Values.nextcloud.persistence.hooks.existingClaim }}{{ .Values.nextcloud.persistence.hooks.existingClaim }}{{- else }}nextcloud-hooks-pvc{{- end }}
              {{- else }}
              emptyDir: {}
              {{- end }}
            - name: tmp
              emptyDir:
                medium: "Memory"
          securityContext:
            fsGroup: 33
          containers:
          - name: nextcloud-cron
            image: "{{ .Values.nextcloud.image.repository }}:{{ .Values.nextcloud.image.tag }}{{- with .Values.nextcloud.image.flavor }}-{{ . }}{{- end }}"
            {{- with .Values.nextcloud.securityContext }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            env:
              {{- include "nextcloud.env" . | trim | nindent 14 }}
            command:
            - /bin/sh
            - -c
            - /docker-entrypoint-hooks.d/cron/cron-script.sh
            volumeMounts:
              {{- include "nextcloud.volumeMounts" . | trim | nindent 14 }}
              - mountPath: /docker-entrypoint-hooks.d/
                name: nextcloud-hooks-folder
              - mountPath: /tmp
                name: tmp
            resources:
              limits:
                nvidia.com/gpu: {{ .Values.nextcloud.gpu.nvidia }}
          restartPolicy: OnFailure