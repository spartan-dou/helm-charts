{{- if .Values.imaginary.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nextcloud.fullname" . }}-imaginary
  labels:
    {{- include "nextcloud.labels" . | nindent 4 }}
    app.kubernetes.io/component: imaginary
spec:
  replicas: {{ .Values.imaginary.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "nextcloud.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: imaginary
  template:
    metadata:
      labels:
        {{- include "nextcloud.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: imaginary
    spec:
      containers:
        - env:
            - name: IMAGINARY_SECRET
              value: "{{ .Values.imaginary.secret }}"
            - name: TZ
              value: "{{ .Values.TIMEZONE }}"
          image: "{{ .Values.imaginary.repository }}:{{ .Values.imaginary.tag }}"
          name: imaginary
          ports:
            - containerPort: 9000
              protocol: TCP
              name: "imaginary"
          # startupProbe:
          #   exec:
          #     command:
          #       - /healthcheck.sh
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   failureThreshold: 30
          # readinessProbe:
          #   exec:
          #     command:
          #       - /healthcheck.sh
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   failureThreshold: 3
          # livenessProbe:
          #   exec:
          #     command:
          #       - /healthcheck.sh
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
          #   failureThreshold: 5
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
{{- end }}
