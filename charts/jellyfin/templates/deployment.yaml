apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jellyfin.fullname" . }}
  labels:
    {{- include "jellyfin.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "jellyfin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jellyfin.selectorLabels" . | nindent 8 }}
    spec:
      {{- if gt (int .Values.gpu.nvidia) 0 }}
      runtimeClassName: nvidia
      {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{- if gt (int .Values.gpu.nvidia) 0 }}
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,video,utility"
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- with .Values.extraEnv }}
            {{- range . }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
            - name: https
              containerPort: 8920
              protocol: TCP
          {{- if .Values.enableDLNA }}
            - name: dlna-1900
              containerPort: 1900
              hostPort: 1900
              protocol: UDP
            - name: dlna-7359
              containerPort: 7359
              protocol: UDP
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: config
            {{- range .Values.persistence.media.extra }}
            - name: {{ .name }}
              mountPath: {{ .dir }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: media
          {{- if .Values.persistence.media.enabled }}
          hostPath:
            path: {{ .Values.persistence.media.path}}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config
          {{- if .Values.persistence.config.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}jellyfin-pvc-config{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- range .Values.persistence.media.extra }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
            type: Directory
        {{- end }}
