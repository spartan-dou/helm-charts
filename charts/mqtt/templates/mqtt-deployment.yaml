apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mosquitto.fullname" . }}
  labels:
    {{- include "mosquitto.labels" . | nindent 4 }}
    app.kubernetes.io/component: mqtt
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mosquitto.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mqtt
  template:
    metadata:
      labels:
        {{- include "mosquitto.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mqtt
    spec:
      serviceAccountName: {{ include "mosquitto.serviceAccountName" . }}
      securityContext:
        # runAsUser: 1883
        # runAsGroup: 1883
        fsGroup: 1883
      initContainers:
      - name: "init-volumes"
        image: "busybox"
        command: ['sh', '/scripts/init.sh']
        volumeMounts:
        - mountPath: /mosquitto
          name: mosquitto
        - mountPath: /scripts
          name: script
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: "mqtt"
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        - name: "mqtt-ws"
          containerPort: 9001
          protocol: TCP
        env:
          - name: TZ
            value: {{ .Values.timezone | quote }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.port }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.port }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /mosquitto
          name: mosquitto
        - mountPath: /tmp/mosquitto.conf
          subPath: mosquitto.conf
          name: configmap
        {{- with .Values.authentication }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "mosquitto_passwd -c -b /mosquitto/configinc/passwordfile {{ .user }} {{ .password }}"]
        {{- end }}
      volumes:
      - name: configmap
        configMap:
          name: {{ template "mosquitto.fullname" . }}
      - name: script
        configMap:
          name: {{ template "mosquitto.fullname" . }}-script-init
      - name: mosquitto
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "mosquitto.fullname" . }}-pvc{{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
